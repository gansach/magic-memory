{"version":3,"sources":["components/Card/Card.js","App.js","index.js","components/Card/Card.module.css","App.module.css"],"names":["card","props","classList","classes","Card","flipped","push","Flipped","className","join","Front","src","front","alt","Back","back","onClick","choose","c","cardImages","App","shuffleCards","shuffledCards","sort","Math","random","map","id","matched","setState","cards","turns","choiceOne","choiceTwo","handleChoice","state","console","log","setTimeout","resetTurn","Button","this","CardGrid","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"8PAoBeA,EAhBF,SAACC,GACZ,IAAMC,EAAY,CAACC,IAAQC,MAG3B,OAFIH,EAAMI,SAASH,EAAUI,KAAKH,IAAQI,SAGxC,sBAAKC,UAAWN,EAAUO,KAAK,KAA/B,UACE,qBAAKD,UAAWL,IAAQO,MAAOC,IAAKV,EAAMW,MAAOC,IAAI,eACrD,qBACEL,UAAWL,IAAQW,KACnBH,IAAKV,EAAMc,KACXF,IAAI,YACJG,QAAS,kBAAMf,EAAMgB,OAAOhB,EAAMiB,U,gBCTpCC,EAAa,CACjB,CAAER,IAAK,qBACP,CAAEA,IAAK,qBACP,CAAEA,IAAK,mBACP,CAAEA,IAAK,qBACP,CAAEA,IAAK,qBACP,CAAEA,IAAK,qBAwFMS,E,kDApFb,WAAYnB,GAAQ,IAAD,8BACjB,cAAMA,IAWRoB,aAAe,WACb,IAAMC,EAAgB,UAAIH,EAAeA,GACtCI,MAAK,kBAAMC,KAAKC,SAAW,MAC3BC,KAAI,SAAC1B,GAAD,mBAAC,eAAeA,GAAhB,IAAsB2B,GAAIH,KAAKC,SAAUG,SAAS,OAEzD,EAAKC,SAAS,CACZC,MAAOR,EACPS,MAAO,EACPC,UAAW,KACXC,UAAW,QArBI,EA0BnBC,aAAe,SAAClC,GACd,EAAK6B,UACH,SAACM,GAAD,OAAYA,EAAMH,UAAY,CAAEC,UAAWjC,GAAS,CAAEgC,UAAWhC,MAEjE,WACM,EAAKmC,MAAMH,WAAa,EAAKG,MAAMF,YACjC,EAAKE,MAAMH,UAAUrB,MAAQ,EAAKwB,MAAMF,UAAUtB,MACpD,EAAKkB,UAAS,SAACM,GAAD,MAAY,CACxBL,MAAO,YAAIK,EAAML,OAAOJ,KAAI,SAACR,GAAD,OAC1BA,EAAEP,MAAQX,EAAKW,IAAf,2BAA0BO,GAA1B,IAA6BU,SAAS,IAASV,SAGnDkB,QAAQC,IAAI,UAEdC,YAAW,kBAAM,EAAKC,cAAa,UAxCxB,EA8CnBA,UAAY,WACV,EAAKV,UAAS,SAACM,GAAD,MAAY,CACxBH,UAAW,KACXC,UAAW,KACXF,MAAOI,EAAMJ,MAAQ,OA/CvB,EAAKI,MAAQ,CACXL,MAAO,GACPC,MAAO,EACPC,UAAW,KACXC,UAAW,MAPI,E,0CAsDnB,WAAU,IAAD,OACP,OACE,sBAAKzB,UAAWL,IAAQiB,IAAxB,UACE,8CACA,wBAAQZ,UAAWL,IAAQqC,OAAQxB,QAASyB,KAAKpB,aAAjD,sBAGA,6BAAKoB,KAAKN,MAAMJ,QAEhB,qBAAKvB,UAAWL,IAAQuC,SAAxB,SACG,YAAID,KAAKN,MAAML,OAAOJ,KAAI,SAAC1B,GAAD,OACzB,cAACI,EAAD,CAEEc,EAAGlB,EACHK,QACEL,IAAS,EAAKmC,MAAMH,WACpBhC,IAAS,EAAKmC,MAAMF,WACpBjC,EAAK4B,QAEPX,OAAQ,EAAKiB,aACbtB,MAAOZ,EAAKW,IACZI,KAAM,kBATDf,EAAK2B,gB,GAnENgB,aCVlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,KAAO,mBAAmB,MAAQ,oBAAoB,QAAU,sBAAsB,KAAO,qB,kBCA/GD,EAAOC,QAAU,CAAC,IAAM,iBAAiB,OAAS,oBAAoB,SAAW,yB","file":"static/js/main.8b7bd8ec.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport classes from \"./Card.module.css\";\r\n\r\nconst card = (props) => {\r\n  const classList = [classes.Card];\r\n  if (props.flipped) classList.push(classes.Flipped);\r\n\r\n  return (\r\n    <div className={classList.join(\" \")}>\r\n      <img className={classes.Front} src={props.front} alt=\"card front\"></img>\r\n      <img\r\n        className={classes.Back}\r\n        src={props.back}\r\n        alt=\"card back\"\r\n        onClick={() => props.choose(props.c)}\r\n      ></img>\r\n    </div>\r\n  );\r\n};\r\nexport default card;\r\n","import React, { Component } from \"react\";\n\nimport Card from \"./components/Card/Card\";\n\nimport classes from \"./App.module.css\";\n\nconst cardImages = [\n  { src: \"/img/helmet-1.png\" },\n  { src: \"/img/potion-1.png\" },\n  { src: \"/img/ring-1.png\" },\n  { src: \"/img/scroll-1.png\" },\n  { src: \"/img/shield-1.png\" },\n  { src: \"/img/sword-1.png\" },\n];\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      cards: [],\n      turns: 0,\n      choiceOne: null,\n      choiceTwo: null,\n    };\n  }\n\n  // Shuffle cards\n  shuffleCards = () => {\n    const shuffledCards = [...cardImages, ...cardImages]\n      .sort(() => Math.random() - 0.5)\n      .map((card) => ({ ...card, id: Math.random(), matched: false }));\n\n    this.setState({\n      cards: shuffledCards,\n      turns: 0,\n      choiceOne: null,\n      choiceTwo: null,\n    });\n  };\n\n  // Handle a choice\n  handleChoice = (card) => {\n    this.setState(\n      (state) => (state.choiceOne ? { choiceTwo: card } : { choiceOne: card }),\n      // Compare 2 selected cards\n      () => {\n        if (this.state.choiceOne && this.state.choiceTwo) {\n          if (this.state.choiceOne.src === this.state.choiceTwo.src) {\n            this.setState((state) => ({\n              cards: [...state.cards].map((c) =>\n                c.src === card.src ? { ...c, matched: true } : c\n              ),\n            }));\n            console.log(\"hello\");\n          }\n          setTimeout(() => this.resetTurn(), 1000);\n        }\n      }\n    );\n  };\n\n  resetTurn = () => {\n    this.setState((state) => ({\n      choiceOne: null,\n      choiceTwo: null,\n      turns: state.turns + 1,\n    }));\n  };\n\n  render() {\n    return (\n      <div className={classes.App}>\n        <h1>Magic Memory</h1>\n        <button className={classes.Button} onClick={this.shuffleCards}>\n          New Game\n        </button>\n        <h4>{this.state.turns}</h4>\n\n        <div className={classes.CardGrid}>\n          {[...this.state.cards].map((card) => (\n            <Card\n              key={card.id}\n              c={card}\n              flipped={\n                card === this.state.choiceOne ||\n                card === this.state.choiceTwo ||\n                card.matched\n              }\n              choose={this.handleChoice}\n              front={card.src}\n              back={\"/img/cover.png\"}\n            />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"Card_Card__D30ru\",\"Front\":\"Card_Front__1-5yC\",\"Flipped\":\"Card_Flipped__17fW1\",\"Back\":\"Card_Back__2vW-u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2EC--\",\"Button\":\"App_Button__R-KVn\",\"CardGrid\":\"App_CardGrid__nrvbf\"};"],"sourceRoot":""}